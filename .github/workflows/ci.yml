name: CI
on:
  pull_request:
  push:
    branches:
      - master
env:
  RUST_BACKTRACE: 1

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt

    - name: cargo fmt --check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check examples
        uses: actions-rs/cargo@v1
        with:
            command: check
            args: --examples --all

      - name: Check examples with all features on stable
        uses: actions-rs/cargo@v1
        with:
            command: check
            args: --examples --all-features --all
        if: matrix.rust == 'stable'

      - name: Check benchmarks on nightly
        uses: actions-rs/cargo@v1
        with:
            command: check
            args: --all-features --examples --all --benches
        if: matrix.rust == 'nightly'

      - name: Test
        uses: actions-rs/cargo@v1
        with:
            command: test
            args: "--all \
                   --all-features \
                   --exclude algebra-benches \
                   --exclude poly-benches"

  check_no_std:
    name: Check no_std
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: thumbv6m-none-eabi
          override: true

      - name: Install Rust ARM64 (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-none
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: serialize
        run: |
          cd serialize
          cargo build -p ark-serialize --no-default-features --target thumbv6m-none-eabi
          cargo check --examples -p ark-serialize --no-default-features --target thumbv6m-none-eabi
          cd ..

      - name: ff
        run: |
          cd ff
          cargo build -p ark-ff --no-default-features --target thumbv6m-none-eabi
          cargo check --examples -p ark-ff --no-default-features --target thumbv6m-none-eabi
          cd ..

      - name: ec
        run: |
          cd ec
          cargo build -p ark-ec --no-default-features --target thumbv6m-none-eabi
          cargo check --examples -p ark-ec --no-default-features --target thumbv6m-none-eabi
          cd ..

      - name: poly
        run: |
          cd ec
          cargo build -p ark-poly --no-default-features --target thumbv6m-none-eabi
          cargo check --examples -p ark-poly --no-default-features --target thumbv6m-none-eabi
          cd ..

      - name: bls12_377
        run: |
          cd bls12-377
          cargo build -p ark-bls12-377 --no-default-features --features full --target thumbv6m-none-eabi
          cargo check --examples -p ark-bls12-377 --no-default-features --features full --target thumbv6m-none-eabi
          cd ..

      - name: bls12_381
        run: |
          cd bls12-381
          cargo build -p ark-bls12-381 --no-default-features --features full --target thumbv6m-none-eabi
          cargo check --examples -p ark-bls12-381 --no-default-features --features full --target thumbv6m-none-eabi
          cd ..

      - name: bn254
        run: |
          cd bn254
          cargo build -p ark-bn254 --no-default-features --features full --target thumbv6m-none-eabi
          cargo check --examples -p ark-bn254 --no-default-features --features full --target thumbv6m-none-eabi
          cd ..

      - name: mnt-298
        run: |
          cd bn254
          cargo build -p ark-mnt-298 --no-default-features --features full --target thumbv6m-none-eabi
          cargo check --examples -p ark-mnt-298 --no-default-features --features full --target thumbv6m-none-eabi
          cd ..

      - name: mnt-753
        run: |
          cd bn254
          cargo build -p ark-mnt-753 --no-default-features --features full --target thumbv6m-none-eabi
          cargo check --examples -p ark-mnt-753 --no-default-features --features full --target thumbv6m-none-eabi
          cd ..
